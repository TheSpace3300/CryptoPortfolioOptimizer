from services.fetch_data import fetch_ohlcv
from models.model_selector import select_best_model
import pandas as pd

def data_forecast(pairs, forecast_horizon=7):
    results = {}

    for pair in pairs:
        series = fetch_ohlcv(pair)
        series = series.asfreq('D')
        data = series.values

        best_model_name, best_mae, forecast = select_best_model(data, forecast_horizon)

        last_date = series.index[-1]
        forecast_dates = pd.date_range(start=last_date + pd.Timedelta(days=1), periods=forecast_horizon, freq='D')
        forecast_series = pd.Series(forecast, index=forecast_dates)

        results[pair] = {
            'model': best_model_name,
            'mae': best_mae,
            'forecast': forecast_series
        }

        print(f"üìà –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ {forecast_horizon} –¥–Ω–µ–π –¥–ª—è {pair} —Å –º–æ–¥–µ–ª—å—é {best_model_name} (MAE: {best_mae:.4f}):")
        print(forecast_series)
        print()

    return results

def data_raw(pairs, timeframe='1d', limit=365):
    df_dict = {}
    for pair in pairs:
        series = fetch_ohlcv(pair, timeframe=timeframe, limit=limit)
        series = series.asfreq('D')  # –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –∫ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π —á–∞—Å—Ç–æ—Ç–µ
        df_dict[pair] = series
    # –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –≤ –µ–¥–∏–Ω—ã–π DataFrame –ø–æ –∏–Ω–¥–µ–∫—Å—É (timestamp)
    df_all = pd.DataFrame(df_dict)
    return df_all